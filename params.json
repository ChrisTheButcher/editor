{"name":"Editor","tagline":"A different wysiwyg editor specially designed for content-writers","body":"WYSIWYG editor\r\n======\r\n###Introduction\r\n\r\nA somewhat different wysiwyg editor specially designed for content-writers.\r\nWe don't want crappy HTML to be generated so we use our own HTML engine and overwrite all default actions.\r\nWe also want the content-writer (without any knowledge of HTML) to be able to see the difference between for example a bold tag and a h3 tag.\r\n\r\n**Please note that this editor is NOT ready for production!!!**\r\n\r\n\r\n###Demo\r\n\r\nGo to http://dmeijboom.github.io/editor/example.html for an example of the editor.\r\n\r\n\r\n###Editor API\r\n####jQuery plugin\r\nThe editor is exposed as a jQuery plugin, you can use it by using the following code:\r\n\r\n```js\r\n$(document).ready(function() {\r\n    $(\"#ed\").editify({\r\n        menu: ['bold', 'italic', 'underline', 'styles'],\r\n        plugins: ['basic_formatting', 'widgets']\r\n        stylesheets: []   \r\n    });\r\n});\r\n```\r\n\r\nWhere `#ed` is ofcourse the selector of the textarea or input field.\r\nCurrently we support the following settings in the jQuery plugin:\r\n\r\nName | Type | Description\r\n--- | --- | ---\r\nmenu | string[] | The location of each plugin\r\nplugins | string[] | The plugin-files to load\r\nstylesheets | string[] | The stylesheet to embed into the editor\r\n\r\n####Editor plugins\r\nTo create a plugin you have to create a new folder in the `src/plugins` folder with your plugin name.\r\nThen you have to create a file called `script.js` in this folder, you can use the following example for a new plugin:\r\n\r\n```js\r\n//Create a new example plugin\r\n(function() {\r\n    PluginManager.createPlugin('example', {\r\n        init: function(editor) {\r\n            //Create a new button which toggles the bold styling\r\n            editor.addButton('bold', {\r\n                icon: 'bold',\r\n                click: function() {\r\n                    editor.toggleStyle('bold');\r\n                }\r\n            });\r\n            \r\n            //Create a new button which alerts 'hi'\r\n            editor.addButton('hi', {\r\n                icon: 'underline',\r\n                click: function() {\r\n                    alert('hi');\r\n                }\r\n            });\r\n            \r\n            //Create a new select box which uses the value of the selected item to create a new element\r\n            editor.addSelect('styles', {\r\n                text: 'styles',\r\n                options: [{\r\n                    key: 'Title', value: 'h1'\r\n                }, {\r\n                    key: 'SubTitle', value: 'h3'\r\n                }],\r\n                click: function(option) {\r\n                    editor.insertAfterCursorElement($('<' + option.value + '/>').html('&nbsp;'));\r\n                }\r\n            });\r\n        }\r\n    });\r\n}());\r\n```\r\n\r\nAfter creating your plugin make sure the name of the plugin-file is used in the `plugins` array and the plugins themself (in our case bold, hi and styles) are in the `menu` array.\r\n\r\n\r\n###How to build\r\n\r\nI use `grunt` and `nodeJS` to build the entire project, both software runs on Windows, Mac Osx and Linux.\r\nThe first thing you should do is set-up NodeJS which can be done by going to: http://nodejs.org/ and press the 'install' button (make sure that node is in your PATH variable so it can be accessed globally).\r\n\r\nThe next step is to get the source-code from GitHub you can either use the GIT command-line tools, download the repository as a ZIP file or use the GitHub client app (which can be downloaded here: https://mac.github.com/ or here: https://windows.github.com/).\r\n\r\nIf you're done open the terminal or MS-DOS with admin priviliges, then run the following commands:\r\n\r\n```\r\nnpm install -g grunt\r\n```\r\n\r\nThis will install the grunt build-system.\r\n\r\n```\r\nnpm install\r\n```\r\n\r\nThis will install all nodeJS dependencies.\r\n\r\n```\r\ngrunt\r\n```\r\n\r\nThis will minify all javascript and css files to the /build directory.\r\n\r\n```\r\nnode app\r\n```\r\n\r\nThis will create a new static-file webserver which can be used to view the editor (a webserver is needed since I use ajax in the code). The default port is `8080` which can be changed in the `/app.js` file.\r\n\r\nGo to http://localhost:8080 in your browser and voila!\r\nPlease note that on every change you should run `grunt` again!\r\n\r\n\r\n###Browser support\r\nCurrently I only tested the editor in Google Chrome (on Mac Osx) and Safari (on Mac Osx). But it will support IE9+, Chrome, Firefox, Safari and other browsers based on WebKit or the Gecko Engine.\r\n","google":"UA-39333802-3","note":"Don't delete this file! It's used internally to help with page regeneration."}